// Generated by CoffeeScript 1.4.0
(function() {
  var $container, $currentTime, $dummyNavi, $liquidCrystal, $playpause, $random, $repeat, $searchBar, $seekBar, $seekSlider, $seekUI, $selectBox, $textArea, $volume, $win, addPanelAnimation, country, currentTime, currentTimePars, domain, fadeAnime, feedType, firstLoad, genre, getUserAgent, id_label, im_images, im_releaseDate, init, initPanels, initSeek, initVolume, isPlaying, isRandom, limit, link_href_m4a, loadRSS, now, nowGenre, onResizeHandler, paneLineLength, panelWidth, pause, play, player, randomFlag, removePanelAnimation, repeatFlag, searchBarClose, searchBarOpen, searchFlag, selectboxClickHandler, setPlayingPanel, setQuePos, setVolume, setup, setupEventListener, thumbnailAnimation, thumbnailChanger, timeupdates, titles, trace;

  $win = $(window);

  $liquidCrystal = $('#liquidCrystal');

  $seekUI = $('#seekUI');

  $seekBar = $('#seekBer');

  $textArea = $('#textArea');

  $repeat = $('#repeat');

  $random = $('#random');

  $searchBar = $('#search-bar');

  $currentTime = $('#currentTime');

  $playpause = $('#playpause');

  $volume = $('#volume');

  $container = $('#container');

  $selectBox = $('#select-box');

  $dummyNavi = $('#dummyNavi');

  player = document.getElementById('player');

  domain = 'https://itunes.apple.com/';

  country = 'en';

  feedType = 'topsongs';

  limit = 200;

  genre = {
    All: '',
    Alternative: 20,
    Blues: 2,
    Childrens_Music: 4,
    Classical: 5,
    Country: 6,
    Dance: 17,
    Electronic: 7,
    HipHop_Rap: 18,
    Jass: 11,
    Pop: 14,
    R_and_B_Soul: 15,
    Reggae: 24,
    Rock: 21,
    Singer_Songwriter: 10,
    Soundtrack: 16,
    World: 19
  };

  titles = [];

  im_images = [];

  im_releaseDate = [];

  link_href_m4a = [];

  id_label = [];

  now = 0;

  isPlaying = false;

  currentTime = 0;

  currentTimePars = 0;

  $seekSlider = {};

  randomFlag = false;

  repeatFlag = 1;

  panelWidth = 0;

  paneLineLength = 0;

  searchFlag = false;

  nowGenre = 'Dance';

  firstLoad = false;

  trace = function() {
    /*
    		console.log(link_href_m4a[now])
    */

  };

  removePanelAnimation = function() {
    return $container.find('.panel').removeClass('scale');
  };

  addPanelAnimation = function() {
    return $container.find('.panel').removeClass('scale').eq(now).addClass('scale');
  };

  setPlayingPanel = function() {
    return $container.find('.panel').find('div').hide().end().eq(now).find('div').show();
  };

  thumbnailAnimation = function() {
    /*
    	何かアニメーション
    */

  };

  isRandom = function() {
    if (randomFlag) {
      return now = Math.floor(Math.random() * limit);
    }
  };

  pause = function() {
    player.pause();
    return removePanelAnimation();
  };

  play = function() {
    $('#apple').hide();
    $('#thumbnail,#textArea').show();
    if (now === link_href_m4a.length) {
      if (repeatFlag === 1) {
        return false;
      } else {
        now = 0;
      }
    } else if (now === -1) {
      now = link_href_m4a.length;
    }
    isRandom();
    player.src = link_href_m4a[now];
    player.error = function() {
      return alert('error');
    };
    player.play();
    trace();
    thumbnailChanger();
    return addPanelAnimation();
  };

  thumbnailChanger = function() {
    $('#thumbnail').attr('src', im_images[now]);
    $('#title').text(titles[now].split(' - ')[0]);
    $('#name').text(titles[now].split(' - ')[1]);
    return setPlayingPanel();
  };

  onResizeHandler = function() {
    var $WW, i, width, _i;
    width = $win.width() * 0.95;
    $WW = $win.width();
    if ($WW > 1200) {
      $searchBar.css({
        'right': 45 + 'px'
      }).show();
      $dummyNavi.show();
      $volume.show().next($liquidCrystal).width(580).css({
        'right': ($WW / 2) - 290 + 'px'
      }).show().find($textArea).width(480).find($seekUI).width($liquidCrystal.width() - 120).show().find($repeat).show().next().next($seekBar).show().width($seekUI.width() - 100).find('.slider').width($seekUI.width() - 100).show().parent().next().next($random).show();
    } else if (($WW <= 1200) && ($WW >= 850)) {
      $searchBar.css({
        'right': 45 - ($WW / 100) + 'px'
      }).show();
      $dummyNavi.show();
      $volume.hide().next($liquidCrystal).width($WW * 0.48).css({
        'right': ($WW / 2) - ($liquidCrystal.width() / 2) + 'px'
      }).show().find($textArea).width($liquidCrystal.width() - 110).find($seekUI).width($liquidCrystal.width() - 110).find($repeat).show().next().next($seekBar).show().width($seekUI.width() - 100).find('.slider').width($seekUI.width() - 100).show().parent().next().next($random).show();
    } else if (($WW < 850) && ($WW >= 700)) {
      $searchBar.css({
        'right': 15 - ($WW / 100) + 'px'
      }).show();
      $dummyNavi.hide();
      $volume.hide().next($liquidCrystal).width($WW * 0.48).css({
        'right': ($WW / 2) - ($liquidCrystal.width() / 2) + 'px'
      }).show().find($textArea).width($liquidCrystal.width() - 110).find($seekUI).width($liquidCrystal.width() - 110).show().find($repeat).show().next().next($seekBar).show().width($seekUI.width() - 100).find('.slider').width($seekUI.width() - 100).show().parent().next().next($random).show();
    } else if ($win.width() < 700) {
      $dummyNavi.hide();
      $searchBar.css({
        'right': 15 - ($WW / 100) + 'px'
      }).show();
      $liquidCrystal.css({
        'width': $WW * 0.483 + 'px'
      }).hide();
    }
    for (i = _i = 0; _i <= 9; i = ++_i) {
      if (width > (panelWidth * i)) {
        paneLineLength = i;
      }
    }
    return $container.width(panelWidth * paneLineLength + 20);
  };

  setQuePos = function(pos) {
    return player.currentTime = (pos / 100) * 30;
  };

  timeupdates = function() {
    var nowTime;
    currentTime = player.currentTime;
    currentTimePars = (currentTime / 30) * 100;
    $seekSlider.slider('setValue', currentTimePars);
    nowTime = Math.round(currentTime);
    if (nowTime < 10) {
      nowTime = '0' + nowTime;
    }
    $currentTime.empty().text("0:" + nowTime);
    return isPlaying = true;
  };

  searchBarClose = function(e) {
    if ($(e.target).parent('ul').parent('div').attr('id') === 'select-box' || $(e.target).attr('id') === 'search-bar') {
      return;
    }
    searchFlag = false;
    return $selectBox.hide();
  };

  searchBarOpen = function() {
    searchFlag = !searchFlag;
    if (searchFlag) {
      return $selectBox.show();
    } else {
      return $selectBox.hide();
    }
  };

  selectboxClickHandler = function() {
    var index, key, n, _key;
    index = $selectBox.find('li').index(this);
    n = 0;
    _key = '';
    for (key in genre) {
      if (index === n) {
        _key = key;
        console.log(n);
      }
      n++;
    }
    $selectBox.find('li').css({
      'background': 'none'
    });
    $(this).css({
      'background': 'url(img/search-check.png) no-repeat 0 0'
    });
    return loadRSS(country, feedType, limit, genre[_key]);
  };

  fadeAnime = function(e) {
    if (e.type === 'mouseenter') {
      return $(e.target).fadeTo(0, 0.7);
    } else if (e.type === 'mouseleave') {
      return $(e.target).fadeTo(0, 1);
    }
  };

  setupEventListener = function() {
    $container.children('.panel').on('click', function(e) {
      var _now;
      _now = $(this).find('img').attr('id').split('sound_')[1];
      if (now === _now) {
        if (isPlaying) {
          window.open(id_label[now]);
        } else {
          play();
        }
      }
      now = _now;
      return play();
    });
    $container.children('.panel').hover(function() {
      if ($container.find('.panel').index(this) !== now) {
        return $(this).find('div').fadeIn(100);
      }
    }, function() {
      if ($container.find('.panel').index(this) !== now) {
        return $(this).find('div').fadeOut(100);
      }
    });
    if (!firstLoad) {
      $win.resize(onResizeHandler);
      $(document.body).on('click', searchBarClose);
      $searchBar.on('click', searchBarOpen);
      $selectBox.find('li').on('click', selectboxClickHandler).hover(fadeAnime, fadeAnime);
      $(player).on('ended', function() {
        if (repeatFlag !== 3) {
          now++;
          return play();
        }
      });
      $(player).on('playing', function() {
        return $playpause.css({
          'background': 'url(img/pauseBtn.png) no-repeat'
        });
      });
      $(player).on('pause', function() {
        $playpause.css({
          'background': 'url(img/playBtn.png) no-repeat'
        });
        return isPlaying = false;
      });
      $(player).on('timeupdate', timeupdates);
      $playpause.on('click', function() {
        if (isPlaying === true) {
          return pause();
        } else {
          return play();
        }
      });
      $('#prev').on('click', function() {
        if (repeatFlag !== 3) {
          now--;
          isRandom();
          return play();
        }
      });
      $('#next').on('click', function() {
        if (repeatFlag !== 3) {
          now++;
          isRandom();
          return play();
        }
      });
      $random.on('click', function() {
        randomFlag = !randomFlag;
        if (randomFlag) {
          return $(this).css({
            'background': 'url(img/btn-random_on.png)'
          });
        } else {
          return $(this).css({
            'background': 'url(img/btn-random_off.png)'
          });
        }
      });
      return $repeat.on('click', function() {
        var bg;
        repeatFlag++;
        if (repeatFlag === 4) {
          repeatFlag = 1;
        }
        bg = '';
        switch (repeatFlag) {
          case 1:
            bg = 'btn-repeat_off.png';
            break;
          case 2:
            bg = 'btn-repeat_on.png';
            break;
          case 3:
            bg = 'btn-repeat_one.png';
        }
        return $(this).css({
          'background': 'url(img/' + bg(+')')
        });
      });
    }
  };

  initPanels = function() {
    var i, len, num, panels, _i, _ref;
    console.log('initPanels');
    panels = '';
    num = 0;
    len = link_href_m4a.length;
    for (i = _i = 0, _ref = len - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      panels += '<div class="panel"><img id="sound_' + i + '" src="' + im_images[i] + '" /><br /><div><p class="panelTitle">' + titles[i].split(' - ')[0] + '</p><p>' + titles[i].split(' - ')[1] + '</p></div></div>';
    }
    return $container.append(panels);
  };

  setup = function() {
    var pnl;
    pause();
    $liquidCrystal.show();
    pnl = $container.find('.panel');
    return panelWidth = pnl.width() + parseInt(pnl.css('margin-left').split('px')[0]) + parseInt(pnl.css('margin-right').split('px')[0]);
  };

  loadRSS = function(country, feedType, limit, genre) {
    var url;
    console.log(genre);
    $container.empty();
    nowGenre = genre;
    now = 0;
    titles = [];
    im_images = [];
    im_releaseDate = [];
    link_href_m4a = [];
    url = domain + country + '/rss/' + feedType + '/limit=' + limit + '/genre=' + genre + '/json';
    return $.ajax({
      type: 'GET',
      url: url,
      dataType: 'json',
      success: function(data) {
        return data.feed.entry.forEach(function(entry) {
          titles.push(entry['title'].label);
          im_images.push(entry['im:image'][2].label);
          im_releaseDate.push(entry['im:releaseDate'].label);
          link_href_m4a.push(entry['link'][1].attributes.href);
          return id_label.push(entry['id'].label);
        });
      },
      error: function(data) {
        return alert('error!');
      },
      complete: function() {
        initPanels();
        setupEventListener();
        setup();
        onResizeHandler();
        return firstLoad = true;
      }
    });
  };

  initSeek = function() {
    $seekSlider = $seekBar.find('.slider').slider({
      max: 100,
      value: 1,
      tooltip: 'hide'
    }).on('slide', function(e) {
      return setQuePos(this.value);
    });
    return $seekSlider.slider('setValue', 0).end().find('.slider').find('.slider-handle').eq(1).hide().end().end().find('.tooltip-inner').hide();
  };

  setVolume = function(value) {
    if (!isNaN(parseInt(value))) {
      return player.volume = value * 0.01;
    }
  };

  initVolume = function() {
    player.volume = 0.5;
    return $('#volume').find('.slider').slider({
      max: 100,
      value: 1,
      tooltip: 'hide'
    }).on('slide', function(e) {
      return setVolume(this.value);
    }).slider('setValue', 50).end().find('.slider').find('.slider-handle').eq(1).hide().end().end().find('.tooltip-inner').hide();
  };

  init = function() {
    loadRSS(country, feedType, limit, '');
    initVolume();
    initSeek();
    return $selectBox.find('li').eq(0).css({
      'background': 'url(img/search-check.png) no-repeat 0 0'
    });
  };

  getUserAgent = function() {
    var agent, ua;
    agent = '';
    ua = navigator.userAgent;
    if (ua.search(/Safari/) !== -1) {
      agent = 'safari';
      if (ua.search(/Chrome/) !== -1) {
        agent = 'Chrome';
      }
    }
    if (agent === '') {
      return $(document.body).empty().html('<p style="text-align:center;margin:0 auto;font-size:150px;"><strong>ChromeかSafariで見てー！</strong></p>');
    } else {
      return init();
    }
  };

  getUserAgent();

}).call(this);
